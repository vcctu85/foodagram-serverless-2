{
  "service": {
    "service": "serverless-food-app",
    "serviceObject": {
      "name": "serverless-food-app"
    },
    "provider": {
      "stage": "dev",
      "variableSyntax": "\\${([^{}]+?)}",
      "name": "aws",
      "runtime": "nodejs12.x",
      "region": "us-east-1",
      "tracing": {
        "lambda": true,
        "apiGateway": true
      },
      "environment": {
        "GROUPS_TABLE": "Food-Groups-dev",
        "IMAGES_TABLE": "Food-Images-dev",
        "IMAGE_ID_INDEX": "ImageIdIndex",
        "CONNECTIONS_TABLE": "Connections-dev",
        "IMAGES_S3_BUCKET": "serverless-foodagram-images-dev",
        "SIGNED_URL_EXPIRATION": 300,
        "THUMBNAILS_S3_BUCKET": "serverless-fooddagram-thumbnail-dev",
        "AUTH_0_SECRET": "qIf8xMPfSJCIydflGjZTHvDhaameOkfs4VuX0-6Eb7sNbylH6MncdZjAN_94VcO3"
      },
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "codedeploy:*"
          ],
          "Resource": [
            "*"
          ]
        },
        {
          "Effect": "Allow",
          "Action": [
            "dynamodb:Scan",
            "dynamodb:PutItem",
            "dynamodb:GetItem"
          ],
          "Resource": "arn:aws:dynamodb:us-east-1:*:table/Food-Groups-dev"
        },
        {
          "Effect": "Allow",
          "Action": [
            "dynamodb:PutItem",
            "dynamodb:Query"
          ],
          "Resource": "arn:aws:dynamodb:us-east-1:*:table/Food-Images-dev"
        },
        {
          "Effect": "Allow",
          "Action": [
            "dynamodb:Query"
          ],
          "Resource": "arn:aws:dynamodb:us-east-1:*:table/Food-Images-dev/index/ImageIdIndex"
        },
        {
          "Effect": "Allow",
          "Action": [
            "s3:PutObject",
            "s3:GetObject"
          ],
          "Resource": "arn:aws:s3:::serverless-foodagram-images-dev/*"
        },
        {
          "Effect": "Allow",
          "Action": [
            "s3:PutObject"
          ],
          "Resource": "arn:aws:s3:::serverless-fooddagram-thumbnail-dev/*"
        },
        {
          "Effect": "Allow",
          "Action": [
            "dynamodb:Scan",
            "dynamodb:PutItem",
            "dynamodb:DeleteItem"
          ],
          "Resource": "arn:aws:dynamodb:us-east-1:*:table/Connections-dev"
        }
      ],
      "versionFunctions": true,
      "remoteFunctionData": null,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "AuthLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-food-app-dev-Auth"
            }
          },
          "GetGroupsLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-food-app-dev-GetGroups"
            }
          },
          "CreateGroupLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-food-app-dev-CreateGroup"
            }
          },
          "GetImagesLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-food-app-dev-GetImages"
            }
          },
          "CreateImageLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-food-app-dev-CreateImage"
            }
          },
          "SendUploadNotificationsLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-food-app-dev-SendUploadNotifications"
            }
          },
          "ResizeImageLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-food-app-dev-ResizeImage"
            }
          },
          "ConnectHandlerLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-food-app-dev-ConnectHandler"
            }
          },
          "DisconnectHandlerLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-food-app-dev-DisconnectHandler"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "serverless-food-app-dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-food-app-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-food-app-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][0]"
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][1]"
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][2]"
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][3]"
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][4]"
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][5]"
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][6]"
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "xray:PutTraceSegments",
                          "xray:PutTelemetryRecords"
                        ],
                        "Resource": [
                          "*"
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "execute-api:ManageConnections"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:execute-api:*:*:*/@connections/*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "serverless-food-app-dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "AuthLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/serverless-food-app/dev/1589050770330-2020-05-09T18:59:30.330Z/serverless-food-app.zip"
              },
              "FunctionName": "serverless-food-app-dev-Auth",
              "Handler": "src/lambda/auth/auth0Authorizer.handler",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs12.x",
              "Timeout": 6,
              "TracingConfig": {
                "Mode": "Active"
              },
              "Environment": {
                "Variables": {
                  "GROUPS_TABLE": "Food-Groups-dev",
                  "IMAGES_TABLE": "Food-Images-dev",
                  "IMAGE_ID_INDEX": "ImageIdIndex",
                  "CONNECTIONS_TABLE": "Connections-dev",
                  "IMAGES_S3_BUCKET": "serverless-foodagram-images-dev",
                  "SIGNED_URL_EXPIRATION": 300,
                  "THUMBNAILS_S3_BUCKET": "serverless-fooddagram-thumbnail-dev",
                  "AUTH_0_SECRET": "qIf8xMPfSJCIydflGjZTHvDhaameOkfs4VuX0-6Eb7sNbylH6MncdZjAN_94VcO3"
                }
              }
            },
            "DependsOn": [
              "AuthLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "AuthLambdaVersion4DRgrroRTibU2Ahk5fghuf6wp1i8YFADM0zdKQpY04": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "AuthLambdaFunction"
              },
              "CodeSha256": "iRqcDE83fXItkRa1gNwihIgRsD759a4s+151+jET7/4="
            }
          },
          "GetGroupsLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/serverless-food-app/dev/1589050770330-2020-05-09T18:59:30.330Z/serverless-food-app.zip"
              },
              "FunctionName": "serverless-food-app-dev-GetGroups",
              "Handler": "src/lambda/http/getGroups.handler",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs12.x",
              "Timeout": 6,
              "TracingConfig": {
                "Mode": "Active"
              },
              "Environment": {
                "Variables": {
                  "GROUPS_TABLE": "Food-Groups-dev",
                  "IMAGES_TABLE": "Food-Images-dev",
                  "IMAGE_ID_INDEX": "ImageIdIndex",
                  "CONNECTIONS_TABLE": "Connections-dev",
                  "IMAGES_S3_BUCKET": "serverless-foodagram-images-dev",
                  "SIGNED_URL_EXPIRATION": 300,
                  "THUMBNAILS_S3_BUCKET": "serverless-fooddagram-thumbnail-dev",
                  "AUTH_0_SECRET": "qIf8xMPfSJCIydflGjZTHvDhaameOkfs4VuX0-6Eb7sNbylH6MncdZjAN_94VcO3"
                }
              }
            },
            "DependsOn": [
              "GetGroupsLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "GetGroupsLambdaVersioncJXxN1P0v1YpGdvKX0cCVfYrsxw96anUbH3FsgHyh38": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetGroupsLambdaFunction"
              },
              "CodeSha256": "iRqcDE83fXItkRa1gNwihIgRsD759a4s+151+jET7/4="
            }
          },
          "CreateGroupLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/serverless-food-app/dev/1589050770330-2020-05-09T18:59:30.330Z/serverless-food-app.zip"
              },
              "FunctionName": "serverless-food-app-dev-CreateGroup",
              "Handler": "src/lambda/http/createGroup.handler",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs12.x",
              "Timeout": 6,
              "TracingConfig": {
                "Mode": "Active"
              },
              "Environment": {
                "Variables": {
                  "GROUPS_TABLE": "Food-Groups-dev",
                  "IMAGES_TABLE": "Food-Images-dev",
                  "IMAGE_ID_INDEX": "ImageIdIndex",
                  "CONNECTIONS_TABLE": "Connections-dev",
                  "IMAGES_S3_BUCKET": "serverless-foodagram-images-dev",
                  "SIGNED_URL_EXPIRATION": 300,
                  "THUMBNAILS_S3_BUCKET": "serverless-fooddagram-thumbnail-dev",
                  "AUTH_0_SECRET": "qIf8xMPfSJCIydflGjZTHvDhaameOkfs4VuX0-6Eb7sNbylH6MncdZjAN_94VcO3"
                }
              }
            },
            "DependsOn": [
              "CreateGroupLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "CreateGroupLambdaVersionW2BxZbj1SyKH8p4CYglFC3FyB3OztoL3fC53krNKB6g": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CreateGroupLambdaFunction"
              },
              "CodeSha256": "iRqcDE83fXItkRa1gNwihIgRsD759a4s+151+jET7/4="
            }
          },
          "GetImagesLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/serverless-food-app/dev/1589050770330-2020-05-09T18:59:30.330Z/serverless-food-app.zip"
              },
              "FunctionName": "serverless-food-app-dev-GetImages",
              "Handler": "src/lambda/http/getImages.handler",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "GetImagesIamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs12.x",
              "Timeout": 6,
              "TracingConfig": {
                "Mode": "Active"
              },
              "Environment": {
                "Variables": {
                  "GROUPS_TABLE": "Food-Groups-dev",
                  "IMAGES_TABLE": "Food-Images-dev",
                  "IMAGE_ID_INDEX": "ImageIdIndex",
                  "CONNECTIONS_TABLE": "Connections-dev",
                  "IMAGES_S3_BUCKET": "serverless-foodagram-images-dev",
                  "SIGNED_URL_EXPIRATION": 300,
                  "THUMBNAILS_S3_BUCKET": "serverless-fooddagram-thumbnail-dev",
                  "AUTH_0_SECRET": "qIf8xMPfSJCIydflGjZTHvDhaameOkfs4VuX0-6Eb7sNbylH6MncdZjAN_94VcO3"
                }
              }
            },
            "DependsOn": [
              "GetImagesIamRoleLambdaExecution",
              "GetImagesLogGroup"
            ]
          },
          "GetImagesLambdaVersionQbLueAHkBEaY3rx8lbc4WYKoalDGuwhIH2uQm6Q6U": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetImagesLambdaFunction"
              },
              "CodeSha256": "iRqcDE83fXItkRa1gNwihIgRsD759a4s+151+jET7/4="
            }
          },
          "CreateImageLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/serverless-food-app/dev/1589050770330-2020-05-09T18:59:30.330Z/serverless-food-app.zip"
              },
              "FunctionName": "serverless-food-app-dev-CreateImage",
              "Handler": "src/lambda/http/createImage.handler",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs12.x",
              "Timeout": 6,
              "TracingConfig": {
                "Mode": "Active"
              },
              "Environment": {
                "Variables": {
                  "GROUPS_TABLE": "Food-Groups-dev",
                  "IMAGES_TABLE": "Food-Images-dev",
                  "IMAGE_ID_INDEX": "ImageIdIndex",
                  "CONNECTIONS_TABLE": "Connections-dev",
                  "IMAGES_S3_BUCKET": "serverless-foodagram-images-dev",
                  "SIGNED_URL_EXPIRATION": 300,
                  "THUMBNAILS_S3_BUCKET": "serverless-fooddagram-thumbnail-dev",
                  "AUTH_0_SECRET": "qIf8xMPfSJCIydflGjZTHvDhaameOkfs4VuX0-6Eb7sNbylH6MncdZjAN_94VcO3"
                }
              }
            },
            "DependsOn": [
              "CreateImageLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "CreateImageLambdaVersion7mb58Mv9wOOx0LZEIkRHNzB0xJfZ0AQwV4UjqNwaY": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CreateImageLambdaFunction"
              },
              "CodeSha256": "iRqcDE83fXItkRa1gNwihIgRsD759a4s+151+jET7/4="
            }
          },
          "SendUploadNotificationsLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/serverless-food-app/dev/1589050770330-2020-05-09T18:59:30.330Z/serverless-food-app.zip"
              },
              "FunctionName": "serverless-food-app-dev-SendUploadNotifications",
              "Handler": "src/lambda/s3/sendNotifications.handler",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs12.x",
              "Timeout": 6,
              "TracingConfig": {
                "Mode": "Active"
              },
              "Environment": {
                "Variables": {
                  "GROUPS_TABLE": "Food-Groups-dev",
                  "IMAGES_TABLE": "Food-Images-dev",
                  "IMAGE_ID_INDEX": "ImageIdIndex",
                  "CONNECTIONS_TABLE": "Connections-dev",
                  "IMAGES_S3_BUCKET": "serverless-foodagram-images-dev",
                  "SIGNED_URL_EXPIRATION": 300,
                  "THUMBNAILS_S3_BUCKET": "serverless-fooddagram-thumbnail-dev",
                  "AUTH_0_SECRET": "qIf8xMPfSJCIydflGjZTHvDhaameOkfs4VuX0-6Eb7sNbylH6MncdZjAN_94VcO3",
                  "STAGE": "dev",
                  "API_ID": {
                    "Ref": "WebsocketsApi"
                  }
                }
              }
            },
            "DependsOn": [
              "SendUploadNotificationsLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "SendUploadNotificationsLambdaVersionqXqZUq7OeDn8jdtcczdbomjhVh9m1K3yP9QUZkr2s": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SendUploadNotificationsLambdaFunction"
              },
              "CodeSha256": "iRqcDE83fXItkRa1gNwihIgRsD759a4s+151+jET7/4="
            }
          },
          "ResizeImageLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/serverless-food-app/dev/1589050770330-2020-05-09T18:59:30.330Z/serverless-food-app.zip"
              },
              "FunctionName": "serverless-food-app-dev-ResizeImage",
              "Handler": "src/lambda/s3/resizeImage.handler",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs12.x",
              "Timeout": 6,
              "TracingConfig": {
                "Mode": "Active"
              },
              "Environment": {
                "Variables": {
                  "GROUPS_TABLE": "Food-Groups-dev",
                  "IMAGES_TABLE": "Food-Images-dev",
                  "IMAGE_ID_INDEX": "ImageIdIndex",
                  "CONNECTIONS_TABLE": "Connections-dev",
                  "IMAGES_S3_BUCKET": "serverless-foodagram-images-dev",
                  "SIGNED_URL_EXPIRATION": 300,
                  "THUMBNAILS_S3_BUCKET": "serverless-fooddagram-thumbnail-dev",
                  "AUTH_0_SECRET": "qIf8xMPfSJCIydflGjZTHvDhaameOkfs4VuX0-6Eb7sNbylH6MncdZjAN_94VcO3"
                }
              }
            },
            "DependsOn": [
              "ResizeImageLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "ResizeImageLambdaVersionF4tX8kz4xdKODGmxgRUY7tXXgvUfzYu2wzqMQTc": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ResizeImageLambdaFunction"
              },
              "CodeSha256": "iRqcDE83fXItkRa1gNwihIgRsD759a4s+151+jET7/4="
            }
          },
          "ConnectHandlerLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/serverless-food-app/dev/1589050770330-2020-05-09T18:59:30.330Z/serverless-food-app.zip"
              },
              "FunctionName": "serverless-food-app-dev-ConnectHandler",
              "Handler": "src/lambda/websocket/connect.handler",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs12.x",
              "Timeout": 6,
              "TracingConfig": {
                "Mode": "Active"
              },
              "Environment": {
                "Variables": {
                  "GROUPS_TABLE": "Food-Groups-dev",
                  "IMAGES_TABLE": "Food-Images-dev",
                  "IMAGE_ID_INDEX": "ImageIdIndex",
                  "CONNECTIONS_TABLE": "Connections-dev",
                  "IMAGES_S3_BUCKET": "serverless-foodagram-images-dev",
                  "SIGNED_URL_EXPIRATION": 300,
                  "THUMBNAILS_S3_BUCKET": "serverless-fooddagram-thumbnail-dev",
                  "AUTH_0_SECRET": "qIf8xMPfSJCIydflGjZTHvDhaameOkfs4VuX0-6Eb7sNbylH6MncdZjAN_94VcO3"
                }
              }
            },
            "DependsOn": [
              "ConnectHandlerLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "ConnectHandlerLambdaVersionznyW0YdAvFRCMigfhzuHIVORtNjIOAbzgRkfEi1xKfc": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ConnectHandlerLambdaFunction"
              },
              "CodeSha256": "iRqcDE83fXItkRa1gNwihIgRsD759a4s+151+jET7/4="
            }
          },
          "DisconnectHandlerLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/serverless-food-app/dev/1589050770330-2020-05-09T18:59:30.330Z/serverless-food-app.zip"
              },
              "FunctionName": "serverless-food-app-dev-DisconnectHandler",
              "Handler": "src/lambda/websocket/disconnect.handler",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs12.x",
              "Timeout": 6,
              "TracingConfig": {
                "Mode": "Active"
              },
              "Environment": {
                "Variables": {
                  "GROUPS_TABLE": "Food-Groups-dev",
                  "IMAGES_TABLE": "Food-Images-dev",
                  "IMAGE_ID_INDEX": "ImageIdIndex",
                  "CONNECTIONS_TABLE": "Connections-dev",
                  "IMAGES_S3_BUCKET": "serverless-foodagram-images-dev",
                  "SIGNED_URL_EXPIRATION": 300,
                  "THUMBNAILS_S3_BUCKET": "serverless-fooddagram-thumbnail-dev",
                  "AUTH_0_SECRET": "qIf8xMPfSJCIydflGjZTHvDhaameOkfs4VuX0-6Eb7sNbylH6MncdZjAN_94VcO3"
                }
              }
            },
            "DependsOn": [
              "DisconnectHandlerLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "DisconnectHandlerLambdaVersiontgYBGbSPdj2Qmp5BdTqCfmYsr4kqgViQaiuFlzhayxE": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "DisconnectHandlerLambdaFunction"
              },
              "CodeSha256": "iRqcDE83fXItkRa1gNwihIgRsD759a4s+151+jET7/4="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-serverless-food-app",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceGroups": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "groups",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceGroupsGroupidVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceGroups"
              },
              "PathPart": "{groupId}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceGroupsGroupidVarImages": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceGroupsGroupidVar"
              },
              "PathPart": "images",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodGroupsOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".+\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceGroups"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodGroupsGroupidVarImagesOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".+\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceGroupsGroupidVarImages"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodGroupsGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceGroups"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetGroupsLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodGroupsPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceGroups"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "CUSTOM",
              "AuthorizerId": {
                "Ref": "AuthApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Ref": "CreateGroupLambdaFunctionAliasLive"
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": [],
              "RequestValidatorId": {
                "Ref": "RequestBodyValidator"
              },
              "RequestModels": {
                "application/json": "GroupRequest"
              }
            },
            "DependsOn": [
              "GroupRequestModel"
            ]
          },
          "ApiGatewayMethodGroupsGroupidVarImagesGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceGroupsGroupidVarImages"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetImagesLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodGroupsGroupidVarImagesPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceGroupsGroupidVarImages"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "CUSTOM",
              "AuthorizerId": {
                "Ref": "AuthApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "CreateImageLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": [],
              "RequestValidatorId": {
                "Ref": "RequestBodyValidator"
              },
              "RequestModels": {
                "application/json": "ImageRequest"
              }
            },
            "DependsOn": [
              "ImageRequestModel"
            ]
          },
          "AuthApiGatewayAuthorizer": {
            "Type": "AWS::ApiGateway::Authorizer",
            "Properties": {
              "IdentitySource": "method.request.header.Authorization",
              "Name": "Auth",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "AuthorizerUri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "AuthLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              },
              "Type": "TOKEN"
            }
          },
          "ApiGatewayDeployment1589050718336": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodGroupsOptions",
              "ApiGatewayMethodGroupsGroupidVarImagesOptions",
              "ApiGatewayMethodGroupsGet",
              "ApiGatewayMethodGroupsPost",
              "ApiGatewayMethodGroupsGroupidVarImagesGet",
              "ApiGatewayMethodGroupsGroupidVarImagesPost"
            ]
          },
          "GetGroupsLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetGroupsLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "CreateGroupLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Ref": "CreateGroupLambdaFunctionAliasLive"
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "AuthLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "AuthLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "GetImagesLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetImagesLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "CreateImageLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "CreateImageLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "WebsocketsApi": {
            "Type": "AWS::ApiGatewayV2::Api",
            "Properties": {
              "Name": "dev-serverless-food-app-websockets",
              "RouteSelectionExpression": "$request.body.action",
              "Description": "Serverless Websockets",
              "ProtocolType": "WEBSOCKET"
            }
          },
          "ConnectHandlerWebsocketsIntegration": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "WebsocketsApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "ConnectHandlerLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            }
          },
          "DisconnectHandlerWebsocketsIntegration": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "WebsocketsApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "DisconnectHandlerLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            }
          },
          "ConnectHandlerLambdaPermissionWebsockets": {
            "Type": "AWS::Lambda::Permission",
            "DependsOn": [
              "WebsocketsApi",
              "ConnectHandlerLambdaFunction"
            ],
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ConnectHandlerLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com"
            }
          },
          "DisconnectHandlerLambdaPermissionWebsockets": {
            "Type": "AWS::Lambda::Permission",
            "DependsOn": [
              "WebsocketsApi",
              "DisconnectHandlerLambdaFunction"
            ],
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "DisconnectHandlerLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com"
            }
          },
          "SconnectWebsocketsRoute": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "WebsocketsApi"
              },
              "RouteKey": "$connect",
              "AuthorizationType": "NONE",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "ConnectHandlerWebsocketsIntegration"
                    }
                  ]
                ]
              }
            }
          },
          "SdisconnectWebsocketsRoute": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "WebsocketsApi"
              },
              "RouteKey": "$disconnect",
              "AuthorizationType": "NONE",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "DisconnectHandlerWebsocketsIntegration"
                    }
                  ]
                ]
              }
            }
          },
          "WebsocketsDeploymentStage": {
            "Type": "AWS::ApiGatewayV2::Stage",
            "Properties": {
              "ApiId": {
                "Ref": "WebsocketsApi"
              },
              "StageName": "dev",
              "Description": "Serverless Websockets",
              "DeploymentId": {
                "Ref": "WebsocketsDeploymentGguJuljUHmdkqvQ5Xj01AlrwzSBqqzLh0EBSMZp5HY0"
              }
            }
          },
          "WebsocketsDeploymentGguJuljUHmdkqvQ5Xj01AlrwzSBqqzLh0EBSMZp5HY0": {
            "Type": "AWS::ApiGatewayV2::Deployment",
            "DependsOn": [
              "SconnectWebsocketsRoute",
              "SdisconnectWebsocketsRoute"
            ],
            "Properties": {
              "ApiId": {
                "Ref": "WebsocketsApi"
              },
              "Description": "Serverless Websockets"
            }
          },
          "SendUploadNotificationsSnsSubscriptionImagesTopicdev": {
            "Type": "AWS::SNS::Subscription",
            "Properties": {
              "TopicArn": {
                "Fn::Join": [
                  ":",
                  [
                    "arn:aws:sns",
                    {
                      "Ref": "AWS::Region"
                    },
                    {
                      "Ref": "AWS::AccountId"
                    },
                    "imagesTopic-dev"
                  ]
                ]
              },
              "Protocol": "lambda",
              "Endpoint": {
                "Fn::GetAtt": [
                  "SendUploadNotificationsLambdaFunction",
                  "Arn"
                ]
              }
            }
          },
          "SendUploadNotificationsLambdaPermissionImagesTopicdevSNS": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "SendUploadNotificationsLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "sns.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  ":",
                  [
                    "arn:aws:sns",
                    {
                      "Ref": "AWS::Region"
                    },
                    {
                      "Ref": "AWS::AccountId"
                    },
                    "imagesTopic-dev"
                  ]
                ]
              }
            }
          },
          "ResizeImageSnsSubscriptionImagesTopicdev": {
            "Type": "AWS::SNS::Subscription",
            "Properties": {
              "TopicArn": {
                "Fn::Join": [
                  ":",
                  [
                    "arn:aws:sns",
                    {
                      "Ref": "AWS::Region"
                    },
                    {
                      "Ref": "AWS::AccountId"
                    },
                    "imagesTopic-dev"
                  ]
                ]
              },
              "Protocol": "lambda",
              "Endpoint": {
                "Fn::GetAtt": [
                  "ResizeImageLambdaFunction",
                  "Arn"
                ]
              }
            }
          },
          "ResizeImageLambdaPermissionImagesTopicdevSNS": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ResizeImageLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "sns.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  ":",
                  [
                    "arn:aws:sns",
                    {
                      "Ref": "AWS::Region"
                    },
                    {
                      "Ref": "AWS::AccountId"
                    },
                    "imagesTopic-dev"
                  ]
                ]
              }
            }
          },
          "GroupRequestModel": {
            "Type": "AWS::ApiGateway::Model",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ContentType": "application/json",
              "Name": "GroupRequest",
              "Schema": {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "group",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "description"
                ],
                "additionalProperties": false
              }
            }
          },
          "ImageRequestModel": {
            "Type": "AWS::ApiGateway::Model",
            "Properties": {
              "RestApiId": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GroupRequestModel\"][\"Properties\"][\"RestApiId\"]"
              },
              "ContentType": "application/json",
              "Name": "ImageRequest",
              "Schema": {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "image",
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  }
                },
                "required": [
                  "title"
                ],
                "additionalProperties": false
              }
            }
          },
          "ServerlessfoodappdevDeploymentApplication": {
            "Type": "AWS::CodeDeploy::Application",
            "Properties": {
              "ComputePlatform": "Lambda"
            }
          },
          "CodeDeployServiceRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "ManagedPolicyArns": [
                "arn:aws:iam::aws:policy/service-role/AWSCodeDeployRoleForLambda",
                "arn:aws:iam::aws:policy/AWSLambdaFullAccess"
              ],
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Action": [
                      "sts:AssumeRole"
                    ],
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "codedeploy.amazonaws.com"
                      ]
                    }
                  }
                ]
              }
            }
          },
          "CreateGroupLambdaFunctionDeploymentGroup": {
            "Type": "AWS::CodeDeploy::DeploymentGroup",
            "Properties": {
              "ApplicationName": {
                "Ref": "ServerlessfoodappdevDeploymentApplication"
              },
              "AutoRollbackConfiguration": {
                "Enabled": true,
                "Events": [
                  "DEPLOYMENT_FAILURE",
                  "DEPLOYMENT_STOP_ON_ALARM",
                  "DEPLOYMENT_STOP_ON_REQUEST"
                ]
              },
              "DeploymentConfigName": {
                "Fn::Sub": [
                  "CodeDeployDefault.Lambda${ConfigName}",
                  {
                    "ConfigName": "Linear10PercentEvery1Minute"
                  }
                ]
              },
              "DeploymentStyle": {
                "DeploymentType": "BLUE_GREEN",
                "DeploymentOption": "WITH_TRAFFIC_CONTROL"
              },
              "ServiceRoleArn": {
                "Fn::GetAtt": [
                  "CodeDeployServiceRole",
                  "Arn"
                ]
              }
            }
          },
          "CreateGroupLambdaFunctionAliasLive": {
            "Type": "AWS::Lambda::Alias",
            "Properties": {
              "FunctionVersion": {
                "Fn::GetAtt": [
                  "CreateGroupLambdaVersionW2BxZbj1SyKH8p4CYglFC3FyB3OztoL3fC53krNKB6g",
                  "Version"
                ]
              },
              "FunctionName": {
                "Ref": "CreateGroupLambdaFunction"
              },
              "Name": "Live"
            },
            "UpdatePolicy": {
              "CodeDeployLambdaAliasUpdate": {
                "ApplicationName": {
                  "Ref": "ServerlessfoodappdevDeploymentApplication"
                },
                "DeploymentGroupName": {
                  "Ref": "CreateGroupLambdaFunctionDeploymentGroup"
                }
              }
            }
          },
          "GetImagesIamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "serverless-food-app-dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-food-app-dev-GetImages:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "dynamodb:Query"
                        ],
                        "Resource": "arn:aws:dynamodb:us-east-1:*:table/Food-Images-dev"
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "dynamodb:GetItem"
                        ],
                        "Resource": "arn:aws:dynamodb:us-east-1:*:table/Food-Groups-dev"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "serverless-food-app-dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "GetImages",
                    "lambdaRole"
                  ]
                ]
              },
              "ManagedPolicyArns": []
            }
          },
          "GatewayResponseDefault4XX": {
            "Type": "AWS::ApiGateway::GatewayResponse",
            "Properties": {
              "ResponseParameters": {
                "gatewayresponse.header.Access-Control-Allow-Origin": "'*'",
                "gatewayresponse.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "gatewayresponse.header.Access-Control-Allow-Methods": "'GET,OPTIONS,POST'"
              },
              "ResponseType": "DEFAULT_4XX",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "GroupsDynamoDBTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST",
              "TableName": "Food-Groups-dev"
            }
          },
          "ImagesDynamoDBTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "AttributeDefinitions": [
                {
                  "AttributeName": "groupId",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "timestamp",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "imageId",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "groupId",
                  "KeyType": "HASH"
                },
                {
                  "AttributeName": "timestamp",
                  "KeyType": "RANGE"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST",
              "StreamSpecification": {
                "StreamViewType": "NEW_IMAGE"
              },
              "TableName": "Food-Images-dev",
              "GlobalSecondaryIndexes": [
                {
                  "IndexName": "ImageIdIndex",
                  "KeySchema": [
                    {
                      "AttributeName": "imageId",
                      "KeyType": "HASH"
                    }
                  ],
                  "Projection": {
                    "ProjectionType": "ALL"
                  }
                }
              ]
            }
          },
          "WebSocketConnectionsDynamoDBTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST",
              "TableName": "Connections-dev"
            }
          },
          "RequestBodyValidator": {
            "Type": "AWS::ApiGateway::RequestValidator",
            "Properties": {
              "Name": "request-body-validator",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ValidateRequestBody": true,
              "ValidateRequestParameters": false
            }
          },
          "AttachmentsBucket": {
            "Type": "AWS::S3::Bucket",
            "DependsOn": "SNSTopicPolicy",
            "Properties": {
              "BucketName": "serverless-foodagram-images-dev",
              "NotificationConfiguration": {
                "TopicConfigurations": [
                  {
                    "Event": "s3:ObjectCreated:Put",
                    "Topic": {
                      "Ref": "ImagesTopic"
                    }
                  }
                ]
              },
              "CorsConfiguration": {
                "CorsRules": [
                  {
                    "AllowedOrigins": [
                      "*"
                    ],
                    "AllowedHeaders": [
                      "*"
                    ],
                    "AllowedMethods": [
                      "GET",
                      "PUT",
                      "POST",
                      "DELETE",
                      "HEAD"
                    ],
                    "MaxAge": 3000
                  }
                ]
              }
            }
          },
          "BucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "PolicyDocument": {
                "Id": "MyPolicy",
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Sid": "PublicReadForGetBucketObjects",
                    "Effect": "Allow",
                    "Principal": "*",
                    "Action": "s3:GetObject",
                    "Resource": "arn:aws:s3:::serverless-foodagram-images-dev/*"
                  }
                ]
              },
              "Bucket": {
                "Ref": "AttachmentsBucket"
              }
            }
          },
          "SNSTopicPolicy": {
            "Type": "AWS::SNS::TopicPolicy",
            "Properties": {
              "PolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "AWS": "*"
                    },
                    "Action": "sns:Publish",
                    "Resource": {
                      "Ref": "ImagesTopic"
                    },
                    "Condition": {
                      "ArnLike": {
                        "AWS:SourceArn": "arn:aws:s3:::serverless-foodagram-images-dev"
                      }
                    }
                  }
                ]
              },
              "Topics": [
                {
                  "Ref": "ImagesTopic"
                }
              ]
            }
          },
          "ThumbnailsBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketName": "serverless-fooddagram-thumbnail-dev"
            }
          },
          "ImagesTopic": {
            "Type": "AWS::SNS::Topic",
            "Properties": {
              "DisplayName": "Image bucket topic",
              "TopicName": "imagesTopic-dev"
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          },
          "AuthLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "AuthLambdaVersion4DRgrroRTibU2Ahk5fghuf6wp1i8YFADM0zdKQpY04"
            }
          },
          "GetGroupsLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetGroupsLambdaVersioncJXxN1P0v1YpGdvKX0cCVfYrsxw96anUbH3FsgHyh38"
            }
          },
          "CreateGroupLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CreateGroupLambdaVersionW2BxZbj1SyKH8p4CYglFC3FyB3OztoL3fC53krNKB6g"
            }
          },
          "GetImagesLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetImagesLambdaVersionQbLueAHkBEaY3rx8lbc4WYKoalDGuwhIH2uQm6Q6U"
            }
          },
          "CreateImageLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CreateImageLambdaVersion7mb58Mv9wOOx0LZEIkRHNzB0xJfZ0AQwV4UjqNwaY"
            }
          },
          "SendUploadNotificationsLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SendUploadNotificationsLambdaVersionqXqZUq7OeDn8jdtcczdbomjhVh9m1K3yP9QUZkr2s"
            }
          },
          "ResizeImageLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ResizeImageLambdaVersionF4tX8kz4xdKODGmxgRUY7tXXgvUfzYu2wzqMQTc"
            }
          },
          "ConnectHandlerLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ConnectHandlerLambdaVersionznyW0YdAvFRCMigfhzuHIVORtNjIOAbzgRkfEi1xKfc"
            }
          },
          "DisconnectHandlerLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "DisconnectHandlerLambdaVersiontgYBGbSPdj2Qmp5BdTqCfmYsr4kqgViQaiuFlzhayxE"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            }
          },
          "ServiceEndpointWebsocket": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "wss://",
                  {
                    "Ref": "WebsocketsApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            }
          },
          "AwsDocApiId": {
            "Description": "API ID",
            "Value": {
              "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GroupRequestModel\"][\"Properties\"][\"RestApiId\"]"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "topicName": "imagesTopic-dev",
      "serverless-offline": {
        "port": 3003
      },
      "dynamodb": {
        "start": {
          "port": 8000,
          "inMemory": true,
          "migrate": true
        }
      },
      "documentation": {
        "api": {
          "info": {
            "version": "v1.0.0",
            "title": "Udagram API",
            "description": "Serverless application for images sharing"
          }
        },
        "models": [
          {
            "name": "GroupRequest",
            "contentType": "application/json",
            "schema": {
              "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GroupRequestModel\"][\"Properties\"][\"Schema\"]"
            }
          },
          {
            "name": "ImageRequest",
            "contentType": "application/json",
            "schema": {
              "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ImageRequestModel\"][\"Properties\"][\"Schema\"]"
            }
          }
        ]
      }
    },
    "plugins": [
      "serverless-webpack",
      "serverless-reqvalidator-plugin",
      "serverless-aws-documentation",
      "serverless-plugin-canary-deployments",
      "serverless-iam-roles-per-function",
      "serverless-dynamodb-local",
      "serverless-offline"
    ],
    "pluginsData": {},
    "functions": {
      "Auth": {
        "handler": "src/lambda/auth/auth0Authorizer.handler",
        "events": [],
        "name": "serverless-food-app-dev-Auth",
        "package": {
          "artifact": ".serverless/serverless-food-app.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "AuthLambdaVersion4DRgrroRTibU2Ahk5fghuf6wp1i8YFADM0zdKQpY04"
      },
      "GetGroups": {
        "handler": "src/lambda/http/getGroups.handler",
        "events": [
          {
            "http": {
              "method": "get",
              "path": "groups",
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "serverless-food-app-dev-GetGroups",
        "package": {
          "artifact": ".serverless/serverless-food-app.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "GetGroupsLambdaVersioncJXxN1P0v1YpGdvKX0cCVfYrsxw96anUbH3FsgHyh38"
      },
      "CreateGroup": {
        "handler": "src/lambda/http/createGroup.handler",
        "events": [
          {
            "http": {
              "method": "post",
              "path": "groups",
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "authorizer": {
                "name": "Auth",
                "arn": {
                  "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"AuthLambdaPermissionApiGateway\"][\"Properties\"][\"FunctionName\"]"
                },
                "managedExternally": false,
                "identitySource": "method.request.header.Authorization"
              },
              "reqValidatorName": "RequestBodyValidator",
              "documentation": {
                "summary": "Create a new group",
                "description": "Create a new group",
                "requestModels": {
                  "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ApiGatewayMethodGroupsPost\"][\"Properties\"][\"RequestModels\"]"
                }
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "deploymentSettings": {
          "type": "Linear10PercentEvery1Minute",
          "alias": "Live"
        },
        "name": "serverless-food-app-dev-CreateGroup",
        "package": {
          "artifact": ".serverless/serverless-food-app.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "CreateGroupLambdaVersionW2BxZbj1SyKH8p4CYglFC3FyB3OztoL3fC53krNKB6g"
      },
      "GetImages": {
        "handler": "src/lambda/http/getImages.handler",
        "events": [
          {
            "http": {
              "method": "get",
              "path": "groups/{groupId}/images",
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "iamRoleStatements": [
          {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetImagesIamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][1]"
          },
          {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetImagesIamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][2]"
          }
        ],
        "name": "serverless-food-app-dev-GetImages",
        "package": {
          "artifact": ".serverless/serverless-food-app.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "GetImagesLambdaVersionQbLueAHkBEaY3rx8lbc4WYKoalDGuwhIH2uQm6Q6U"
      },
      "CreateImage": {
        "handler": "src/lambda/http/createImage.handler",
        "events": [
          {
            "http": {
              "method": "post",
              "authorizer": {
                "name": "Auth",
                "arn": {
                  "Fn::GetAtt": [
                    "AuthLambdaFunction",
                    "Arn"
                  ]
                },
                "managedExternally": false,
                "identitySource": "method.request.header.Authorization"
              },
              "path": "groups/{groupId}/images",
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "reqValidatorName": "RequestBodyValidator",
              "documentation": {
                "summary": "Create a new image",
                "description": "Create a new image",
                "requestModels": {
                  "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ApiGatewayMethodGroupsGroupidVarImagesPost\"][\"Properties\"][\"RequestModels\"]"
                }
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "serverless-food-app-dev-CreateImage",
        "package": {
          "artifact": ".serverless/serverless-food-app.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "CreateImageLambdaVersion7mb58Mv9wOOx0LZEIkRHNzB0xJfZ0AQwV4UjqNwaY"
      },
      "SendUploadNotifications": {
        "environment": {
          "STAGE": "dev",
          "API_ID": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"SendUploadNotificationsLambdaFunction\"][\"Properties\"][\"Environment\"][\"Variables\"][\"API_ID\"]"
          }
        },
        "handler": "src/lambda/s3/sendNotifications.handler",
        "events": [
          {
            "sns": {
              "arn": {
                "Fn::Join": [
                  ":",
                  [
                    "arn:aws:sns",
                    {
                      "Ref": "AWS::Region"
                    },
                    {
                      "Ref": "AWS::AccountId"
                    },
                    "imagesTopic-dev"
                  ]
                ]
              },
              "topicName": "imagesTopic-dev"
            }
          }
        ],
        "name": "serverless-food-app-dev-SendUploadNotifications",
        "package": {
          "artifact": ".serverless/serverless-food-app.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "SendUploadNotificationsLambdaVersionqXqZUq7OeDn8jdtcczdbomjhVh9m1K3yP9QUZkr2s"
      },
      "ResizeImage": {
        "handler": "src/lambda/s3/resizeImage.handler",
        "events": [
          {
            "sns": {
              "arn": {
                "Fn::Join": [
                  ":",
                  [
                    "arn:aws:sns",
                    {
                      "Ref": "AWS::Region"
                    },
                    {
                      "Ref": "AWS::AccountId"
                    },
                    "imagesTopic-dev"
                  ]
                ]
              },
              "topicName": "imagesTopic-dev"
            }
          }
        ],
        "name": "serverless-food-app-dev-ResizeImage",
        "package": {
          "artifact": ".serverless/serverless-food-app.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "ResizeImageLambdaVersionF4tX8kz4xdKODGmxgRUY7tXXgvUfzYu2wzqMQTc"
      },
      "ConnectHandler": {
        "handler": "src/lambda/websocket/connect.handler",
        "events": [
          {
            "websocket": {
              "route": "$connect"
            }
          }
        ],
        "name": "serverless-food-app-dev-ConnectHandler",
        "package": {
          "artifact": ".serverless/serverless-food-app.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "ConnectHandlerLambdaVersionznyW0YdAvFRCMigfhzuHIVORtNjIOAbzgRkfEi1xKfc"
      },
      "DisconnectHandler": {
        "handler": "src/lambda/websocket/disconnect.handler",
        "events": [
          {
            "websocket": {
              "route": "$disconnect"
            }
          }
        ],
        "name": "serverless-food-app-dev-DisconnectHandler",
        "package": {
          "artifact": ".serverless/serverless-food-app.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "DisconnectHandlerLambdaVersiontgYBGbSPdj2Qmp5BdTqCfmYsr4kqgViQaiuFlzhayxE"
      }
    },
    "resources": {
      "Resources": {
        "GatewayResponseDefault4XX": {
          "Type": "AWS::ApiGateway::GatewayResponse",
          "Properties": {
            "ResponseParameters": {
              "gatewayresponse.header.Access-Control-Allow-Origin": "'*'",
              "gatewayresponse.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
              "gatewayresponse.header.Access-Control-Allow-Methods": "'GET,OPTIONS,POST'"
            },
            "ResponseType": "DEFAULT_4XX",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "GroupsDynamoDBTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "AttributeDefinitions": [
              {
                "AttributeName": "id",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "id",
                "KeyType": "HASH"
              }
            ],
            "BillingMode": "PAY_PER_REQUEST",
            "TableName": "Food-Groups-dev"
          }
        },
        "ImagesDynamoDBTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "AttributeDefinitions": [
              {
                "AttributeName": "groupId",
                "AttributeType": "S"
              },
              {
                "AttributeName": "timestamp",
                "AttributeType": "S"
              },
              {
                "AttributeName": "imageId",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "groupId",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "timestamp",
                "KeyType": "RANGE"
              }
            ],
            "BillingMode": "PAY_PER_REQUEST",
            "StreamSpecification": {
              "StreamViewType": "NEW_IMAGE"
            },
            "TableName": "Food-Images-dev",
            "GlobalSecondaryIndexes": [
              {
                "IndexName": "ImageIdIndex",
                "KeySchema": [
                  {
                    "AttributeName": "imageId",
                    "KeyType": "HASH"
                  }
                ],
                "Projection": {
                  "ProjectionType": "ALL"
                }
              }
            ]
          }
        },
        "WebSocketConnectionsDynamoDBTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "AttributeDefinitions": [
              {
                "AttributeName": "id",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "id",
                "KeyType": "HASH"
              }
            ],
            "BillingMode": "PAY_PER_REQUEST",
            "TableName": "Connections-dev"
          }
        },
        "RequestBodyValidator": {
          "Type": "AWS::ApiGateway::RequestValidator",
          "Properties": {
            "Name": "request-body-validator",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ValidateRequestBody": true,
            "ValidateRequestParameters": false
          }
        },
        "AttachmentsBucket": {
          "Type": "AWS::S3::Bucket",
          "DependsOn": "SNSTopicPolicy",
          "Properties": {
            "BucketName": "serverless-foodagram-images-dev",
            "NotificationConfiguration": {
              "TopicConfigurations": [
                {
                  "Event": "s3:ObjectCreated:Put",
                  "Topic": {
                    "Ref": "ImagesTopic"
                  }
                }
              ]
            },
            "CorsConfiguration": {
              "CorsRules": [
                {
                  "AllowedOrigins": [
                    "*"
                  ],
                  "AllowedHeaders": [
                    "*"
                  ],
                  "AllowedMethods": [
                    "GET",
                    "PUT",
                    "POST",
                    "DELETE",
                    "HEAD"
                  ],
                  "MaxAge": 3000
                }
              ]
            }
          }
        },
        "BucketPolicy": {
          "Type": "AWS::S3::BucketPolicy",
          "Properties": {
            "PolicyDocument": {
              "Id": "MyPolicy",
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Sid": "PublicReadForGetBucketObjects",
                  "Effect": "Allow",
                  "Principal": "*",
                  "Action": "s3:GetObject",
                  "Resource": "arn:aws:s3:::serverless-foodagram-images-dev/*"
                }
              ]
            },
            "Bucket": {
              "Ref": "AttachmentsBucket"
            }
          }
        },
        "SNSTopicPolicy": {
          "Type": "AWS::SNS::TopicPolicy",
          "Properties": {
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "AWS": "*"
                  },
                  "Action": "sns:Publish",
                  "Resource": {
                    "Ref": "ImagesTopic"
                  },
                  "Condition": {
                    "ArnLike": {
                      "AWS:SourceArn": "arn:aws:s3:::serverless-foodagram-images-dev"
                    }
                  }
                }
              ]
            },
            "Topics": [
              {
                "Ref": "ImagesTopic"
              }
            ]
          }
        },
        "ThumbnailsBucket": {
          "Type": "AWS::S3::Bucket",
          "Properties": {
            "BucketName": "serverless-fooddagram-thumbnail-dev"
          }
        },
        "ImagesTopic": {
          "Type": "AWS::SNS::Topic",
          "Properties": {
            "DisplayName": "Image bucket topic",
            "TopicName": "imagesTopic-dev"
          }
        }
      },
      "Outputs": {}
    },
    "serviceFilename": "serverless.yml",
    "layers": {},
    "isDashboardMonitoringPreconfigured": false
  },
  "package": {
    "artifactDirectoryName": "serverless/serverless-food-app/dev/1589050770330-2020-05-09T18:59:30.330Z",
    "artifact": ""
  }
}