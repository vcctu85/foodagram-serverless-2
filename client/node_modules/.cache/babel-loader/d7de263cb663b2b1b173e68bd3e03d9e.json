{"ast":null,"code":"import _regeneratorRuntime from \"/Users/vitu/Desktop/Udacity/Vicky-final-serverless-Yelp-2/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/vitu/Desktop/Udacity/Vicky-final-serverless-Yelp-2/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { apiEndpoint } from '../config';\nexport function getImages(_x) {\n  return _getImages.apply(this, arguments);\n}\n\nfunction _getImages() {\n  _getImages = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(groupId) {\n    var response, result;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log('Fetching images');\n            _context.next = 3;\n            return fetch(\"\".concat(apiEndpoint, \"/groups/\").concat(groupId, \"/images\"));\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return response.json();\n\n          case 6:\n            result = _context.sent;\n            return _context.abrupt(\"return\", result.items);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getImages.apply(this, arguments);\n}\n\nexport function createImage(_x2, _x3) {\n  return _createImage.apply(this, arguments);\n}\n\nfunction _createImage() {\n  _createImage = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(idToken, newImage) {\n    var reply;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return fetch(\"\".concat(apiEndpoint, \"/groups/\").concat(newImage.groupId, \"/images\"), {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json',\n                'Authorization': \"Bearer \".concat(idToken)\n              },\n              body: JSON.stringify({\n                title: newImage.title\n              })\n            });\n\n          case 2:\n            reply = _context2.sent;\n            _context2.next = 5;\n            return reply.json();\n\n          case 5:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _createImage.apply(this, arguments);\n}\n\nexport function uploadFile(_x4, _x5) {\n  return _uploadFile.apply(this, arguments);\n}\n\nfunction _uploadFile() {\n  _uploadFile = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3(uploadUrl, file) {\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return fetch(uploadUrl, {\n              method: 'PUT',\n              body: file\n            });\n\n          case 2:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _uploadFile.apply(this, arguments);\n}","map":{"version":3,"sources":["/Users/vitu/Desktop/Udacity/Vicky-final-serverless-Yelp-2/client/src/api/images-api.ts"],"names":["apiEndpoint","getImages","groupId","console","log","fetch","response","json","result","items","createImage","idToken","newImage","method","headers","body","JSON","stringify","title","reply","uploadFile","uploadUrl","file"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,WAA5B;AAKA,gBAAsBC,SAAtB;AAAA;AAAA;;;;;2BAAO,iBAAyBC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AACLC,YAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AADK;AAAA,mBAEkBC,KAAK,WAAIL,WAAJ,qBAA0BE,OAA1B,aAFvB;;AAAA;AAECI,YAAAA,QAFD;AAAA;AAAA,mBAGgBA,QAAQ,CAACC,IAAT,EAHhB;;AAAA;AAGCC,YAAAA,MAHD;AAAA,6CAKEA,MAAM,CAACC,KALT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAQP,gBAAsBC,WAAtB;AAAA;AAAA;;;;;2BAAO,kBACLC,OADK,EAELC,QAFK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAKeP,KAAK,WACpBL,WADoB,qBACEY,QAAQ,CAACV,OADX,cAEvB;AACEW,cAAAA,MAAM,EAAE,MADV;AAEEC,cAAAA,OAAO,EAAE;AACP,gCAAgB,kBADT;AAEP,kDAA2BH,OAA3B;AAFO,eAFX;AAMEI,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,gBAAAA,KAAK,EAAEN,QAAQ,CAACM;AADG,eAAf;AANR,aAFuB,CALpB;;AAAA;AAKCC,YAAAA,KALD;AAAA;AAAA,mBAmBQA,KAAK,CAACZ,IAAN,EAnBR;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAsBP,gBAAsBa,UAAtB;AAAA;AAAA;;;;;2BAAO,kBAA0BC,SAA1B,EAA6CC,IAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACCjB,KAAK,CAACgB,SAAD,EAAY;AACrBR,cAAAA,MAAM,EAAE,KADa;AAErBE,cAAAA,IAAI,EAAEO;AAFe,aAAZ,CADN;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import { apiEndpoint } from '../config'\nimport { ImageModel } from '../types/ImageModel'\nimport { ImageUploadInfo } from '../types/ImageUploadInfo'\nimport { ImageUploadResponse } from '../types/ImageUploadResponse'\n\nexport async function getImages(groupId: string): Promise<ImageModel[]> {\n  console.log('Fetching images')\n  const response = await fetch(`${apiEndpoint}/groups/${groupId}/images`)\n  const result = await response.json()\n\n  return result.items\n}\n\nexport async function createImage(\n  idToken: string,\n  newImage: ImageUploadInfo\n): Promise<ImageUploadResponse> {\n\n  const reply = await fetch(\n    `${apiEndpoint}/groups/${newImage.groupId}/images`,\n    {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${idToken}`\n      },\n      body: JSON.stringify({\n        title: newImage.title\n      })\n    }\n  )\n\n  return await reply.json()\n}\n\nexport async function uploadFile(uploadUrl: string, file: Buffer): Promise<void> {\n  await fetch(uploadUrl, {\n    method: 'PUT',\n    body: file\n  })\n}\n"]},"metadata":{},"sourceType":"module"}