{"ast":null,"code":"import _regeneratorRuntime from \"/Users/vitu/Desktop/Udacity/Vicky-final-serverless-Yelp-2/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/vitu/Desktop/Udacity/Vicky-final-serverless-Yelp-2/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/vitu/Desktop/Udacity/Vicky-final-serverless-Yelp-2/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/vitu/Desktop/Udacity/Vicky-final-serverless-Yelp-2/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/vitu/Desktop/Udacity/Vicky-final-serverless-Yelp-2/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/vitu/Desktop/Udacity/Vicky-final-serverless-Yelp-2/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/vitu/Desktop/Udacity/Vicky-final-serverless-Yelp-2/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/vitu/Desktop/Udacity/Vicky-final-serverless-Yelp-2/client/src/components/CreateGroup.tsx\";\nimport * as React from 'react';\nimport { Form, Button } from 'semantic-ui-react';\nimport { createGroup } from '../api/groups-api';\nexport var CreateGroup =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CreateGroup, _React$PureComponent);\n\n  function CreateGroup() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CreateGroup);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CreateGroup)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      name: '',\n      description: '',\n      uploadingGroup: false\n    };\n\n    _this.handleNameChange = function (event) {\n      _this.setState({\n        name: event.target.value\n      });\n    };\n\n    _this.handleDescriptionChange = function (event) {\n      _this.setState({\n        description: event.target.value\n      });\n    };\n\n    _this.handleSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(event) {\n        var group;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault();\n                _context.prev = 1;\n\n                if (!(!_this.state.name || !_this.state.description)) {\n                  _context.next = 5;\n                  break;\n                }\n\n                alert('Name and description should be provided');\n                return _context.abrupt(\"return\");\n\n              case 5:\n                _this.setUploadState(true);\n\n                _context.next = 8;\n                return createGroup(_this.props.auth.getIdToken(), {\n                  name: _this.state.name,\n                  description: _this.state.description\n                });\n\n              case 8:\n                group = _context.sent;\n                console.log('Created description', group);\n                alert('Category was created!');\n                _context.next = 16;\n                break;\n\n              case 13:\n                _context.prev = 13;\n                _context.t0 = _context[\"catch\"](1);\n                alert('Could not upload an image: ' + _context.t0.message);\n\n              case 16:\n                _context.prev = 16;\n\n                _this.setUploadState(false);\n\n                return _context.finish(16);\n\n              case 19:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 13, 16, 19]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(CreateGroup, [{\n    key: \"setUploadState\",\n    value: function setUploadState(uploadingGroup) {\n      this.setState({\n        uploadingGroup: uploadingGroup\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Upload new category\"), React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Category\"), React.createElement(\"input\", {\n        placeholder: \"Category name\",\n        value: this.state.name,\n        onChange: this.handleNameChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      })), React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Summary\"), React.createElement(\"input\", {\n        placeholder: \"Group description\",\n        value: this.state.description,\n        onChange: this.handleDescriptionChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      })), this.renderButton()));\n    }\n  }, {\n    key: \"renderButton\",\n    value: function renderButton() {\n      return React.createElement(Button, {\n        loading: this.state.uploadingGroup,\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Create\");\n    }\n  }]);\n\n  return CreateGroup;\n}(React.PureComponent);","map":{"version":3,"sources":["/Users/vitu/Desktop/Udacity/Vicky-final-serverless-Yelp-2/client/src/components/CreateGroup.tsx"],"names":["React","Form","Button","createGroup","CreateGroup","state","name","description","uploadingGroup","handleNameChange","event","setState","target","value","handleDescriptionChange","handleSubmit","preventDefault","alert","setUploadState","props","auth","getIdToken","group","console","log","message","renderButton","PureComponent"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport { Form, Button } from 'semantic-ui-react'\nimport { createGroup } from '../api/groups-api'\nimport Auth from '../auth/Auth'\n\ninterface CreateGroupProps {\n  auth: Auth\n}\n\ninterface CreateGroupState {\n  name: string\n  description: string\n  uploadingGroup: boolean\n}\n\nexport class CreateGroup extends React.PureComponent<\n  CreateGroupProps,\n  CreateGroupState\n> {\n  state: CreateGroupState = {\n    name: '',\n    description: '',\n    uploadingGroup: false\n  }\n\n  handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ name: event.target.value })\n  }\n\n  handleDescriptionChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ description: event.target.value })\n  }\n\n  handleSubmit = async (event: React.SyntheticEvent) => {\n    event.preventDefault()\n\n    try {\n      if (!this.state.name || !this.state.description) {\n        alert('Name and description should be provided')\n        return\n      }\n\n      this.setUploadState(true)\n      const group = await createGroup(this.props.auth.getIdToken(), {\n        name: this.state.name,\n        description: this.state.description\n      })\n\n      console.log('Created description', group)\n\n      alert('Category was created!')\n    } catch (e) {\n      alert('Could not upload an image: ' + e.message)\n    } finally {\n      this.setUploadState(false)\n    }\n  }\n\n  setUploadState(uploadingGroup: boolean) {\n    this.setState({\n      uploadingGroup\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Upload new category</h1>\n\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Field>\n            <label>Category</label>\n            <input\n              placeholder=\"Category name\"\n              value={this.state.name}\n              onChange={this.handleNameChange}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Summary</label>\n            <input\n              placeholder=\"Group description\"\n              value={this.state.description}\n              onChange={this.handleDescriptionChange}\n            />\n          </Form.Field>\n          {this.renderButton()}\n        </Form>\n      </div>\n    )\n  }\n\n  renderButton() {\n    return (\n      <Button loading={this.state.uploadingGroup} type=\"submit\">\n        Create\n      </Button>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}