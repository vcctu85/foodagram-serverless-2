{"ast":null,"code":"import _regeneratorRuntime from \"/Users/vitu/Desktop/Udacity/Vicky-final-serverless-Yelp-2/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/vitu/Desktop/Udacity/Vicky-final-serverless-Yelp-2/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/vitu/Desktop/Udacity/Vicky-final-serverless-Yelp-2/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/vitu/Desktop/Udacity/Vicky-final-serverless-Yelp-2/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/vitu/Desktop/Udacity/Vicky-final-serverless-Yelp-2/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/vitu/Desktop/Udacity/Vicky-final-serverless-Yelp-2/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/vitu/Desktop/Udacity/Vicky-final-serverless-Yelp-2/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/vitu/Desktop/Udacity/Vicky-final-serverless-Yelp-2/client/src/components/CreateImage.tsx\";\nimport * as React from 'react';\nimport { Form, Button } from 'semantic-ui-react';\nimport { createImage, uploadFile } from '../api/images-api';\nvar UploadState;\n\n(function (UploadState) {\n  UploadState[UploadState[\"NoUpload\"] = 0] = \"NoUpload\";\n  UploadState[UploadState[\"UploadingData\"] = 1] = \"UploadingData\";\n  UploadState[UploadState[\"UploadingFile\"] = 2] = \"UploadingFile\";\n})(UploadState || (UploadState = {}));\n\nexport var CreateImage =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CreateImage, _React$PureComponent);\n\n  function CreateImage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CreateImage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CreateImage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      title: '',\n      file: undefined,\n      uploadState: UploadState.NoUpload\n    };\n\n    _this.handleTitleChange = function (event) {\n      _this.setState({\n        title: event.target.value\n      });\n    };\n\n    _this.handleFileChange = function (event) {\n      var files = event.target.files;\n      if (!files) return;\n      console.log('File change', files);\n\n      _this.setState({\n        file: files[0]\n      });\n    };\n\n    _this.handleSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(event) {\n        var uploadInfo;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault();\n                _context.prev = 1;\n\n                if (_this.state.file) {\n                  _context.next = 5;\n                  break;\n                }\n\n                alert('File should be selected');\n                return _context.abrupt(\"return\");\n\n              case 5:\n                _this.setUploadState(UploadState.UploadingData);\n\n                _context.next = 8;\n                return createImage(_this.props.auth.getIdToken(), {\n                  groupId: _this.props.match.params.groupId,\n                  title: _this.state.title\n                });\n\n              case 8:\n                uploadInfo = _context.sent;\n                console.log('Created image', uploadInfo);\n\n                _this.setUploadState(UploadState.UploadingFile);\n\n                _context.next = 13;\n                return uploadFile(uploadInfo.uploadUrl, _this.state.file);\n\n              case 13:\n                alert('Image was uploaded!');\n                _context.next = 19;\n                break;\n\n              case 16:\n                _context.prev = 16;\n                _context.t0 = _context[\"catch\"](1);\n                alert('Could not upload an image: ' + _context.t0.message);\n\n              case 19:\n                _context.prev = 19;\n\n                _this.setUploadState(UploadState.NoUpload);\n\n                return _context.finish(19);\n\n              case 22:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 16, 19, 22]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(CreateImage, [{\n    key: \"setUploadState\",\n    value: function setUploadState(uploadState) {\n      this.setState({\n        uploadState: uploadState\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Upload new image\"), React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Caption\"), React.createElement(\"input\", {\n        placeholder: \"Image caption\",\n        value: this.state.title,\n        onChange: this.handleTitleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      })), React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Image\"), React.createElement(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        placeholder: \"Image to upload\",\n        onChange: this.handleFileChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      })), this.renderButton()));\n    }\n  }, {\n    key: \"renderButton\",\n    value: function renderButton() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, this.state.uploadState === UploadState.UploadingData && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Uploading image metadata\"), this.state.uploadState === UploadState.UploadingFile && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Uploading file\"), React.createElement(Button, {\n        loading: this.state.uploadState !== UploadState.NoUpload,\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Upload\"));\n    }\n  }]);\n\n  return CreateImage;\n}(React.PureComponent);","map":{"version":3,"sources":["/Users/vitu/Desktop/Udacity/Vicky-final-serverless-Yelp-2/client/src/components/CreateImage.tsx"],"names":["React","Form","Button","createImage","uploadFile","UploadState","CreateImage","state","title","file","undefined","uploadState","NoUpload","handleTitleChange","event","setState","target","value","handleFileChange","files","console","log","handleSubmit","preventDefault","alert","setUploadState","UploadingData","props","auth","getIdToken","groupId","match","params","uploadInfo","UploadingFile","uploadUrl","message","renderButton","PureComponent"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport { Form, Button } from 'semantic-ui-react'\nimport { createImage, uploadFile } from '../api/images-api'\nimport Auth from '../auth/Auth'\n\nenum UploadState {\n  NoUpload,\n  UploadingData,\n  UploadingFile,\n}\n\ninterface CreateImageProps {\n  match: {\n    params: {\n      groupId: string\n    }\n  }\n  auth: Auth\n}\n\ninterface CreateImageState {\n  title: string\n  file: any\n  uploadState: UploadState\n}\n\nexport class CreateImage extends React.PureComponent<\n  CreateImageProps,\n  CreateImageState\n> {\n  state: CreateImageState = {\n    title: '',\n    file: undefined,\n    uploadState: UploadState.NoUpload\n  }\n\n  handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ title: event.target.value })\n  }\n\n  handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const files = event.target.files\n    if (!files) return\n\n    console.log('File change', files)\n    this.setState({\n      file: files[0]\n    })\n  }\n\n  handleSubmit = async (event: React.SyntheticEvent) => {\n    event.preventDefault()\n\n    try {\n      if (!this.state.file) {\n        alert('File should be selected')\n        return\n      }\n\n      this.setUploadState(UploadState.UploadingData)\n      const uploadInfo = await createImage(this.props.auth.getIdToken(), {\n        groupId: this.props.match.params.groupId,\n        title: this.state.title\n      })\n\n      console.log('Created image', uploadInfo)\n\n      this.setUploadState(UploadState.UploadingFile)\n      await uploadFile(uploadInfo.uploadUrl, this.state.file)\n\n      alert('Image was uploaded!')\n    } catch (e) {\n      alert('Could not upload an image: ' + e.message)\n    } finally {\n      this.setUploadState(UploadState.NoUpload)\n    }\n  }\n\n  setUploadState(uploadState: UploadState) {\n    this.setState({\n      uploadState\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Upload new image</h1>\n\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Field>\n            <label>Caption</label>\n            <input\n              placeholder=\"Image caption\"\n              value={this.state.title}\n              onChange={this.handleTitleChange}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Image</label>\n            <input\n              type=\"file\"\n              accept=\"image/*\"\n              placeholder=\"Image to upload\"\n              onChange={this.handleFileChange}\n            />\n          </Form.Field>\n\n          {this.renderButton()}\n        </Form>\n      </div>\n    )\n  }\n\n  renderButton() {\n\n    return (\n      <div>\n        {this.state.uploadState === UploadState.UploadingData && <p>Uploading image metadata</p>}\n        {this.state.uploadState === UploadState.UploadingFile && <p>Uploading file</p>}\n        <Button\n          loading={this.state.uploadState !== UploadState.NoUpload}\n          type=\"submit\"\n        >\n          Upload\n        </Button>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}